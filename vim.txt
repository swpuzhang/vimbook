参数设置
1. :set ruler  在右下角显示状态
2. :set incsearch  边输入边匹配
3. :set nowrapscan , 过长的行， 不换行
4. :set wildmenu 在右下角显示按键
5. set cc=30 列的界限符设置在30列地方
6. set nowrap 一行不会被显示为多行
7. :set shiftwidth=4 缩进4个空格
8. :set textwidth=30, 输入字符时， 一行超过30会自动换行
9. :set autoindent  自动缩进,  :set shiftwidth=4  设置缩进为4
10.:set softtabstop=4 设置tab为4个空格h宽度， 默认为8个
11. :filetype indent on  根据文件类型自动判断缩进
12. :set expandtab  tab会被替换为空格 :retab 替换已有的tab

快速编辑
1. ~ 将大小写x相互转换， gu转换成小写， gU转换成大写
2. dd 删除一行， 包括换行符， D删除当前到行尾, 而且不包括换行符
4. ctrl+g 在最后显示当前状态， 包括行列等
5. s 删除当前字符 并进入插入模式, S 删除整行， 并进入插入模式 C 删除当前位置到行末， 并进入插入模式:w
6, r替换一个字符， R 替换字符，一直到按esc
7. J 合并下一行到按当前行，num+j 合并多行到一行 默认会加空格， gJ不会加空格
8. 插入模式先ctrl+o可以执行普通模式下的命令, asdfdf afadf adfad 
9. gq 格式化， 如果设置了textwidth 会自动换行
10. :1,5 center[right][left] 40 , 对齐， left 表示距离左边
11. = d缩进，==缩进当前行
12. gq]/ 排版注释
13. g+ 在撤销历史往前， g-在撤销历史往后
14. ]p,[p 拷贝, 并自动缩进
15, gp 拷贝,并将光标停在最后

快速移动
1. z+enter(zt) ,将当前行滚动到屏幕顶端， z.或者zz将当前行滚动到屏幕中间  z-(zb) 将当前行滚动到最底端
2. 行号+z+[enter . -] 可以将某一行滚动到指定位置
3. H 光标移动到屏幕顶端， M光标移动到屏幕中间, L移动到底端
4. nH 光标移动到屏幕顶端下面几行， nL 光标移动到屏幕底端上面几行
5. enter或者+  移动到一行的第一个字符，  - 移动到上一行的第一个字符
6. n|移动当前行到第n列
7. (移动到句子的开头， )移动到下一个句子的开头
8. { 移动到段的开头， }移动到一下段的开头 段以空行分割
9.[[移动到这一节的开头， ]]移动到z下一节的开头
10. /enter 往前重复搜索， ?enter 往后重复搜索
11.set nowrapscan, 搜索不会回到开头从新搜索
12， f 当前行搜索， t 当前行搜索字符出现的前一个位置, ';' 往后搜索， ','往前搜索
13. vim -R file 或者view file 以只读模式打开
14. m+x 设置一个标记x, 使用`+x 返回x, 使用'+x 返回到标记的行的第一个字符, ``返回上一个标记的位置, '' 返回上一个标记的开头
15. as, is d选择一个句子,  ap, ip 选择要给段落
16. 数字+%  跳转到文件百分比行数
17. ctrl+o 跳转前一个地方， ctrl+i 向后跳转 :jumps 显示跳转列表
18. :marks 显示标记, `^ 上次插入的地方， ~.上次修改的地方， `[ `] 上次修改或者复制的起止位置, `< `> 上次高亮区起止位置
19. g + ctrl+g ,显示当前光标的详细信息
20. gM 移动到当前行的中点，gm 移动到屏幕行的中点
21. gj gk 对于一行很长会h有多个屏幕行驶， 移动到上一个或者下一个屏幕行
22. % 在成对的括号跳转
23. [# 回到#ifdef 开始 ]#跳转到下一个#ifdef开始
24. [[, 回到代码块开始, ][结尾处, ]] 下一个代码块开始, [] 前一个函数结尾
25, [{ 当前代码块的开始, ]}跳到结尾
26. [( ]) 对应括号
27. [/ ]/ 移动到/* */ 的开始结尾
28. gd 跳转到定义

ex命令
1. := 显示文件总行号  :.=   :/pattern/=
2. :[.]+20 当前行20行以后的行, :100;+5 第二个+5表示以100为起始地址，注意中间有个分号:
3. g 表示全局, :g/pattern  在全文件中寻找pattern, 最后会到最后一个pattern, :g/pattern/p 显示所有包含pattern的行
4. /g/pattern/nu 显示包含pattern的行号， 100，200g/pattern/p 在100, 200行中寻找包含pattern的行
5. g! 表示不包含的行
6  :1,3d | s/old/new, '|' 表示继续执行后面的命令, 删除1，3行，并对剩余的行做替换操作.
7. w newfile, 将文件保存新文件，:1,100w newfile 将1,100行保存为新文件 w >> newfile可以追加
8. r file 将file的内容插入到下一行,  100r file 在100后插入`
9. :ls 显示的文件中% 代表当前文件， #为候补文件， 可以使用这两个符号表示文件名
10.:100,200ya a 将100,200的行存到寄存器a, :pu a 将寄存器a的内容放到下一行

搜索与替换
1. :s/old/new/g 将一行中的old替换为new, g表示一行中的所有pattern, 和全局的g不一样 /gc 表示确认
2. :g/old/s//new/g 可以省略后面的old
3. * 查找光标所在的单词, 3* 查找第3个， # 往相反的方向, g* g#部分匹配, \<,\> 匹配的单词的开头和结尾
4. ^, $分别匹配行首和行尾
5.:set ignorecase 忽略大小写 set ignorecase smartcase 如果有一个大写，就是大小写敏感 可以单独在s搜索时机上\C大小写敏感, \c忽略大小写
6. :set nowrapscan 取消查找折返
7./word/e  查找到后光标位于最后


vim 启动参数
1. -b  以二进制打开 -o 为每个文件创建创建一个窗口 -o5 生成5个窗口 -O 垂直分割
2.vim -r ""  选文件恢复 , vim -r 可以显示交换文件目录


多窗口
1. :ctrl +w +s 水平分割窗口  :sp 水平分割， ：vspc垂直， :new , :vnew 这两个会新建空白窗口
2. ctrl+w+h,j,k,l 移动窗口， t 左上角， b 右下角, p 最后一次访问的窗口
3. ctrl+w+c 关闭窗口 ctrl+w+o 关闭其他窗口 ctrl+w+q 离开当前窗口
3. :tabnew [file] 创建新的tab, tabclose, tabonly
4。 可以是使用hide edit , 可以隐藏当前文件， 而不用保存
5. ctrl+w+w 可以在窗口之间跳转
6. vimdiff 打开文件后， 可以通过']c' 跳到下一个点, ']c' 前一个
7. tabledit 打开要给标签页， gt 跳转标签页


折叠
1. zA 递归在折叠和非折叠切换， zC递归关闭折叠, zD 递归删除折叠， zE去除所有折叠 za 切换一个折叠状态 zc g关闭一个折叠， zd删除要给折叠
2. zf 创建折叠, zf+3j  当前3行折叠  3zF 
3. zo 递归打开折叠
4. zf% 折叠


语法高亮
:syntax enable 或者 syntax on

宏
1. q + 大写字母， 表示追加
